{"ast":null,"code":"var _s = $RefreshSig$();\nimport { get, getDatabase, orderByKey, query, ref, startAt } from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\nexport default function useVideoList(_ref) {\n  _s();\n  let {\n    page\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(true);\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    async function fetchVideos() {\n      const db = getDatabase();\n      const videoRef = ref(db, \"videos\");\n      const videosQuery = query(videoRef, orderByKey(), startAt(\"\" + page));\n      try {\n        setLoading(true);\n        setError(false);\n        const snapshot = await get(videosQuery);\n        if (snapshot.exists()) {\n          setVideos(prevVedios => {\n            return [...prevVedios, ...Object.values(snapshot.val())];\n          });\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(true);\n      }\n      setLoading(false);\n    }\n    fetchVideos();\n  }, [page]);\n  return {\n    loading,\n    error,\n    videos\n  };\n}\n_s(useVideoList, \"pwdRh7Y3ArRzpEPlAYGgewDvnOE=\");","map":{"version":3,"names":["get","getDatabase","orderByKey","query","ref","startAt","useEffect","useState","useVideoList","_ref","_s","page","loading","setLoading","error","setError","videos","setVideos","fetchVideos","db","videoRef","videosQuery","snapshot","exists","prevVedios","Object","values","val"],"sources":["/home/mint/Desktop/react/quiz/src/hooks/useVideoList.js"],"sourcesContent":["import {\n  get,\n  getDatabase,\n  orderByKey,\n  query,\n  ref,\n  startAt,\n} from \"firebase/database\";\nimport { useEffect, useState } from \"react\";\n\nexport default function useVideoList({ page }) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(true);\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    async function fetchVideos() {\n      const db = getDatabase();\n      const videoRef = ref(db, \"videos\");\n      const videosQuery = query(videoRef, orderByKey(), startAt(\"\" + page));\n      try {\n        setLoading(true);\n        setError(false);\n        const snapshot = await get(videosQuery);\n        if (snapshot.exists()) {\n          setVideos((prevVedios) => {\n            return [...prevVedios, ...Object.values(snapshot.val())];\n          });\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(true);\n      }\n      setLoading(false);\n    }\n    fetchVideos();\n  }, [page]);\n  return {\n    loading,\n    error,\n    videos,\n  };\n}\n"],"mappings":";AAAA,SACEA,GAAG,EACHC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,GAAG,EACHC,OAAO,QACF,mBAAmB;AAC1B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAW;EAAAC,EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAC3C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,eAAeY,WAAWA,CAAA,EAAG;MAC3B,MAAMC,EAAE,GAAGlB,WAAW,EAAE;MACxB,MAAMmB,QAAQ,GAAGhB,GAAG,CAACe,EAAE,EAAE,QAAQ,CAAC;MAClC,MAAME,WAAW,GAAGlB,KAAK,CAACiB,QAAQ,EAAElB,UAAU,EAAE,EAAEG,OAAO,CAAC,EAAE,GAAGM,IAAI,CAAC,CAAC;MACrE,IAAI;QACFE,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,KAAK,CAAC;QACf,MAAMO,QAAQ,GAAG,MAAMtB,GAAG,CAACqB,WAAW,CAAC;QACvC,IAAIC,QAAQ,CAACC,MAAM,EAAE,EAAE;UACrBN,SAAS,CAAEO,UAAU,IAAK;YACxB,OAAO,CAAC,GAAGA,UAAU,EAAE,GAAGC,MAAM,CAACC,MAAM,CAACJ,QAAQ,CAACK,GAAG,EAAE,CAAC,CAAC;UAC1D,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdD,UAAU,CAAC,KAAK,CAAC;QACjBE,QAAQ,CAAC,IAAI,CAAC;MAChB;MACAF,UAAU,CAAC,KAAK,CAAC;IACnB;IACAK,WAAW,EAAE;EACf,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EACV,OAAO;IACLC,OAAO;IACPE,KAAK;IACLE;EACF,CAAC;AACH;AAACN,EAAA,CAhCuBF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}