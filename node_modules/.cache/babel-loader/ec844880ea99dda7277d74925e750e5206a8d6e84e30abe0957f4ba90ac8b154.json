{"ast":null,"code":"var _jsxFileName = \"/home/mint/Desktop/react/quiz/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport _ from \"lodash\";\nimport React, { useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Answers from \"../components/Answers\";\nimport MiniPlayer from \"../components/MiniPlayer\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport useQuestions from \"../hooks/useQuestions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = null;\nconst Quiz = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    questions,\n    loading,\n    error\n  } = useQuestions(id);\n  console.log(questions[0]);\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"questions\":\n        action.value.forEach(queston => queston.option.forEach(option => {\n          option.checked = false;\n        }));\n        return action.value;\n      case \"answer\":\n        const questions = _.cloneDeep(state);\n        questions[action.questionID].options[action.optionIndex].checked = action.value;\n        return questions;\n      default:\n        return state;\n    }\n  };\n  const [qna, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick three of your favorite Star Wars Flims\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Question can have multiple answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Answers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MiniPlayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"3XRIJO9EiYO5g149cAo8p3j/blw=\", false, function () {\n  return [useParams, useQuestions];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["_","React","useReducer","useParams","Answers","MiniPlayer","ProgressBar","useQuestions","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","Quiz","_s","id","questions","loading","error","console","log","reducer","state","action","type","value","forEach","queston","option","checked","cloneDeep","questionID","options","optionIndex","qna","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mint/Desktop/react/quiz/src/pages/Quiz.js"],"sourcesContent":["import _ from \"lodash\";\nimport React, { useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Answers from \"../components/Answers\";\nimport MiniPlayer from \"../components/MiniPlayer\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport useQuestions from \"../hooks/useQuestions\";\n\nconst initialState = null;\nconst Quiz = () => {\n  const { id } = useParams();\n  const { questions, loading, error } = useQuestions(id);\n  console.log(questions[0]);\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"questions\":\n        action.value.forEach((queston) =>\n          queston.option.forEach((option) => {\n            option.checked = false;\n          })\n        );\n        return action.value;\n      case \"answer\":\n        const questions = _.cloneDeep(state);\n        questions[action.questionID].options[action.optionIndex].checked =\n          action.value;\n\n        return questions;\n\n      default:\n        return state;\n    }\n  };\n\n  const [qna, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <>\n      <h1>Pick three of your favorite Star Wars Flims</h1>\n      <h4>Question can have multiple answers</h4>\n      <Answers />\n      <ProgressBar />\n      <MiniPlayer />\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":";;AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,YAAY,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,YAAY,GAAG,IAAI;AACzB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAG,CAAC,GAAGZ,SAAS,EAAE;EAC1B,MAAM;IAAEa,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGX,YAAY,CAACQ,EAAE,CAAC;EACtDI,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC;EAEzB,MAAMK,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACjC,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,WAAW;QACdD,MAAM,CAACE,KAAK,CAACC,OAAO,CAAEC,OAAO,IAC3BA,OAAO,CAACC,MAAM,CAACF,OAAO,CAAEE,MAAM,IAAK;UACjCA,MAAM,CAACC,OAAO,GAAG,KAAK;QACxB,CAAC,CAAC,CACH;QACD,OAAON,MAAM,CAACE,KAAK;MACrB,KAAK,QAAQ;QACX,MAAMT,SAAS,GAAGhB,CAAC,CAAC8B,SAAS,CAACR,KAAK,CAAC;QACpCN,SAAS,CAACO,MAAM,CAACQ,UAAU,CAAC,CAACC,OAAO,CAACT,MAAM,CAACU,WAAW,CAAC,CAACJ,OAAO,GAC9DN,MAAM,CAACE,KAAK;QAEd,OAAOT,SAAS;MAElB;QACE,OAAOM,KAAK;IAAC;EAEnB,CAAC;EAED,MAAM,CAACY,GAAG,EAAEC,QAAQ,CAAC,GAAGjC,UAAU,CAACmB,OAAO,EAAET,YAAY,CAAC;EAEzD,oBACEH,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpD/B,OAAA;MAAA2B,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3C/B,OAAA,CAACL,OAAO;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACX/B,OAAA,CAACH,WAAW;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACf/B,OAAA,CAACJ,UAAU;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACb;AAEP,CAAC;AAAC1B,EAAA,CArCID,IAAI;EAAA,QACOV,SAAS,EACcI,YAAY;AAAA;AAAAkC,EAAA,GAF9C5B,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}