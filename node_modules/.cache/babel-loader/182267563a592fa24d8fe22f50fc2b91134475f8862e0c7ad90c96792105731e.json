{"ast":null,"code":"var _jsxFileName = \"/home/mint/Desktop/react/quiz/src/pages/Quiz.js\",\n  _s = $RefreshSig$();\nimport _ from \"lodash\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Answers from \"../components/Answers\";\nimport MiniPlayer from \"../components/MiniPlayer\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport useQuestions from \"../hooks/useQuestions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = null;\nconst Quiz = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    questions,\n    loading,\n    error\n  } = useQuestions(id);\n  console.log(questions);\n  useEffect(() => {\n    dispatch({\n      type: \"questions\",\n      value: questions\n    });\n  }, [questions]);\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"questions\":\n        action.value.forEach(queston => queston.option.forEach(option => {\n          option.checked = false;\n        }));\n        return action.value;\n      case \"answer\":\n        const questions = _.cloneDeep(state);\n        questions[action.questionID].options[action.optionIndex].checked = action.value;\n        return questions;\n      default:\n        return state;\n    }\n  };\n  const [qna, dispatch] = useReducer(reducer, initialState);\n  console.log(qna);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There was an error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), !loading && !error && qna && qna.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: qna[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Question can have multiple answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Answers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MiniPlayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(Quiz, \"FA53uTZIlmtTyv20QIClFY92JAQ=\", false, function () {\n  return [useParams, useQuestions];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["_","React","useEffect","useReducer","useParams","Answers","MiniPlayer","ProgressBar","useQuestions","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","Quiz","_s","id","questions","loading","error","console","log","dispatch","type","value","reducer","state","action","forEach","queston","option","checked","cloneDeep","questionID","options","optionIndex","qna","children","fileName","_jsxFileName","lineNumber","columnNumber","length","title","_c","$RefreshReg$"],"sources":["/home/mint/Desktop/react/quiz/src/pages/Quiz.js"],"sourcesContent":["import _ from \"lodash\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Answers from \"../components/Answers\";\nimport MiniPlayer from \"../components/MiniPlayer\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport useQuestions from \"../hooks/useQuestions\";\n\nconst initialState = null;\nconst Quiz = () => {\n  const { id } = useParams();\n  const { questions, loading, error } = useQuestions(id);\n  console.log(questions);\n  useEffect(() => {\n    dispatch({\n      type: \"questions\",\n      value: questions,\n    });\n  }, [questions]);\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"questions\":\n        action.value.forEach((queston) =>\n          queston.option.forEach((option) => {\n            option.checked = false;\n          })\n        );\n        return action.value;\n      case \"answer\":\n        const questions = _.cloneDeep(state);\n        questions[action.questionID].options[action.optionIndex].checked =\n          action.value;\n\n        return questions;\n\n      default:\n        return state;\n    }\n  };\n\n  const [qna, dispatch] = useReducer(reducer, initialState);\n  console.log(qna);\n  return (\n    <>\n      {loading && <div>Loading ...</div>}\n      {error && <div>There was an error!</div>}\n      {!loading && !error && qna && qna.length > 0 && (\n        <>\n          <h1>{qna[0].title}</h1>\n          <h4>Question can have multiple answers</h4>\n          <Answers />\n          <ProgressBar />\n          <MiniPlayer />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}